plot(fit, which=5)
rgp1()
rgp2()
head(swiss)
mdl<-lm(Fertility~., Swiss)
mdl<-lm(Fertility~., swiss)
vif(mdl)
mdl2<-lm(Fertility~.-Education, swiss)
mdl2<-lm(Fertility~.-Examin'ation, swiss)
''
mdl2<-lm(Fertility~.-Examination, swiss)
vif(mdl2)
x1c<-simbias()
apply(x1c, 1, mean)
fit1<-lm(Fertility~Agriculture, swiss)
fit3<-lm(Fertility~Agriculture+Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d<-deviance(fit3)/43
n<-(deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2,43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
View(ravenData)
mdl<-glm(ravenWinNum ~ ravenScore, binomial, ravenData)
lodds<-predict(mdl, data.frame(ravenScore=c(0, 3, 6))
)
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
nxt()
View(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date,poisson, hits)
summary(mdl)
exp(confint(mdl, 'date'))
which.max(hits[,'visits’])
)
()
)
P
)
)\
which.max(hits[,'visits’])
which.max(hits[,"visits"])
hits[704,]
lambda<-mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- glm(visits ~ date, offset=log(visits+1) ,poisson, hits)
mdl2 <- glm(simplystats ~ date, offset=log(visits+1) ,poisson, hits)
summary(mdl2)
qpois(.95,mdl2$fitted.values[704])
skip()
skip()
skip()
skip()
skip()
skip()
as.integer(head(hits[,'date'])
)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
library(rWBclimate)
countries <-c("USA","BRA","CAN","YEM")
st=1900
en=2100
data_df_all <- get_ensemble_temp(countries, type="annualavg", start=st, end=en)
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
runApp()
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
get_ensemble_temp(countries, type="annualavg", start=st, end=en)
get_ensemble_temp(countries, type="annualavg", start=st, end=en)
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
names(iris) = gsub("\\.", "", names(iris))
r1<-rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
r1
r1$save('r1b.html', cdn = F)
r1b.html
r1
r1$LIB$url
getwd()
r1$save('r1c.html', cdn = T)
r1c
r1
r1$save('r1c.html', cdn = F)
require(rCharts)
names(iris) = gsub("\\.", "", names(iris))
r1<-rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
r1$save('r1.html', cdn = F)
rr1$LIB$url
r1$LIB$url
r1
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
install_github("ropensci/plotly")
library("devtools")
install_github("ropensci/plotly")
library(plotly)
set_credentials_file("nicolegoebel", "e0u9bxinn2")
install_github("ropensci/plotly")
set_credentials_file("nicolegoebel", "e0u9bxinn2")
ggiris <- qplot(Petal.Width, Sepal.Length, data = iris, color = Species)
ggiris
py <- plotly()  #create plotly object
r <- py$ggplotly(ggiris)
r$response$url  # the online, interactive plot lives at this URL
library(rCharts)
library(ggplot2)
names(iris) = gsub("\\.", "", names(iris))
r1<-rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
r1
world <- c("USA", "MEX")
options(kmlpath = "/Users/nicolegoebel/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test")
world_map_df <- create_map_df(world)
world_dat <- get_ensemble_temp(world, "annualavg", start=st, end=en)
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
library(rWBclimate)
library(ggplot2)
options(kmlpath = "/Users/nicolegoebel/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test")
world_map_df <- create_map_df(world)
world_dat <- get_ensemble_temp(world, "annualavg", start=st, end=en)
st=1900
en=2100
world_map_df <- create_map_df(world)
world_dat <- get_ensemble_temp(world, "annualavg", start=st, end=en)
world_dat$data <- as.numeric(as.character(world_dat$data))
world_dat<-subset(world_dat,world_dat$percentile==50) #subset to median percentile
world_dat$years=paste(world_dat$fromYear,world_dat$toYear, sep="-")
world_dat<-subset(world_dat, world_dat$scenario!="a2")
world_dat<-subset(world_dat, select=-c(percentile, scenario, fromYear, toYear))
climate_map(world_map_df,df(),return_map = T) + scale_colour_gradient2(limits=c(5, 23))
climate_map(world_map_df,subset(world_dat, world_dat$years==2000,return_map = T) + scale_colour_gradient2(limits=c(5, 23))
geom_polygon()
head(world_dat)
tmp<-subset(world_dat, world_dat$years=="1920-1939")
head(tmp)
climate_map(world_map_df,tmp,return_map = T) + scale_colour_gradient2(limits=c(5, 23))
climate_map(world_map_df,tmp,return_map = T)
climate_map(world_map_df,tmp,return_map = T, limits=c(5, 23))
climate_map(world_map_df,tmp,return_map = F) + scale_colour_gradient2(limits=c(5, 23))
climate_map(world_map_df,tmp,return_map = T) + scale_colour_gradient2(limits=c(5, 23))
map <- ggplot(world_map_df, aes(x=long, y=lat,group=group,fill=data))+ geom_polygon() + scale_colour_gradient2(limits=c(5, 23), low="blue", high="red") + theme_bw()
ggplot(world_map_df, aes(x=long, y=lat,group=group,fill=data))+ geom_polygon() + scale_colour_gradient2(limits=c(5, 23), low="blue", high="red") + theme_bw()
map
climate_map_lims <- function(map_df, data_df, return_map = TRUE){
### You can't plot more that one piece of data on a map
### so we need to check that there's not more data than regions to plot
if(length(unique(map_df$ID)) != dim(data_df)[1]){
stop("You can't have more than one piece fo data for each region to map")
}
## Order data for easy matching
data_df <- data_df[order(data_df$locator),]
map_df <- map_df[order(map_df$ID),]
ids <- unique(map_df$ID)
data_vec <- vector()
for(i in 1:length(ids)){
data_vec <- c(data_vec,rep(data_df$data[i],sum(map_df$ID==ids[i])))
}
if(is.list(data_vec)){
data_vec <- unlist(data_vec)
}
map_df$data <- data_vec
map <- ggplot(map_df, aes(x=long, y=lat,group=group,fill=data))+ geom_polygon() + scale_colour_gradient2(limits=c(5, 23), low="blue", high="red") + theme_bw()
if(return_map == TRUE){return(map)
} else {return(map_df)}
}
]
climate_map_lims(world_map_df,tmp,return_map = T) + scale_colour_gradient2(limits=c(5, 23))
world_dat <- get_ensemble_temp(world, "annualavg", start=1900, end=2000)
en=2100
world_dat <- get_ensemble_temp(world, "annualavg", start=1900, end=2000)
world_dat
world_dat$data <- as.numeric(as.character(world_dat$data))
world_dat<-subset(world_dat,world_dat$percentile==50) #subset to median percentile
world_dat$years=paste(world_dat$fromYear,world_dat$toYear, sep="-")
world_dat<-subset(world_dat, world_dat$scenario!="a2")
world_dat<-subset(world_dat, select=-c(percentile, scenario, fromYear, toYear))
world_dat
world_dat <- get_ensemble_temp(world, "annualavg", start=1920, end=1939)
world_dat$data <- as.numeric(as.character(world_dat$data))
world_dat<-subset(world_dat,world_dat$percentile==50) #subset to median percentile
world_dat$years=paste(world_dat$fromYear,world_dat$toYear, sep="-")
world_dat<-subset(world_dat, world_dat$scenario!="a2")
world_dat<-subset(world_dat, select=-c(percentile, scenario, fromYear, toYear))
world_dat
climate_map(world_map_df,dfhist(),return_map = T) + scale_colour_gradient2(limits=c(5, 23))
climate_map(world_map_df,world_dat,return_map = T) + scale_colour_gradient2(limits=c(5, 23))
?geom_polygon
climate_map_lims <- function(map_df, data_df, return_map = TRUE){
### You can't plot more that one piece of data on a map
### so we need to check that there's not more data than regions to plot
if(length(unique(map_df$ID)) != dim(data_df)[1]){
stop("You can't have more than one piece fo data for each region to map")
}
## Order data for easy matching
data_df <- data_df[order(data_df$locator),]
map_df <- map_df[order(map_df$ID),]
ids <- unique(map_df$ID)
data_vec <- vector()
for(i in 1:length(ids)){
data_vec <- c(data_vec,rep(data_df$data[i],sum(map_df$ID==ids[i])))
}
if(is.list(data_vec)){
data_vec <- unlist(data_vec)
}
map_df$data <- data_vec
map <- ggplot(map_df, aes(x=long, y=lat,group=group,fill=data))+ geom_polygon() + scale_colour_gradient2(limits=c(5, 23), low="blue", high="red", guide="none") + theme_bw()
if(return_map == TRUE){return(map)
} else {return(map_df)}
}
climate_map(world_map_df,world_dat,return_map = T) + scale_colour_gradient2(limits=c(5, 23))
climate_map(world_map_df,world_dat,return_map = T) + theme(legend.position="none") + scale_colour_gradient2(limits=c(5, 23))
climate_map(world_map_df,world_dat,return_map = T) + theme(legend.position="none") + scale_colour_gradient2(limits=c(5, 23), low="blue", high="red")
climate_map(world_map_df,world_dat,return_map = T) +scale_colour_gradient2(low="blue", high="red")
?scale_colour_gradient
climate_map(world_map_df,world_dat,return_map = T) + theme(legend.position="none") + scale_colour_gradient2(limits=c(5, 23),low = "#132B43",
high = "#56B1F7", guide="colourbar")
climate_map(world_map_df,world_dat,return_map = T) + scale_colour_gradient2(limits=c(5, 23),low = "#132B43", high = "#56B1F7", guide="colourbar")
climate_map(world_map_df,world_dat,return_map = T)
climate_map(world_map_df,world_dat,return_map = T) + scale_colour_gradient2(limits=c(5, 23),low = "#132B43", high = "#56B1F7", guide="colourbar")
climate_map(world_map_df,world_dat,return_map = T) + scale_colour_gradient2(limits=c(5, 23),low = "blue", high = "red", guide="colourbar")
map_df=world_map_df
data_df = world_dat
length(unique(map_df$ID)) != dim(data_df)[1]
data_df <- data_df[order(data_df$locator),]
head(data_df)
map_df <- map_df[order(map_df$ID),]
map_df
head(map_df)
data_df
ids <- unique(map_df$ID)
ids
data_vec <- vector()
for(i in 1:length(ids)){
data_vec <- c(data_vec,rep(data_df$data[i],sum(map_df$ID==ids[i])))
}
head(data_ve )
head(data_vec)
if(is.list(data_vec)){
data_vec <- unlist(data_vec)
}
head(data_vec)
dim(data_vec)
length(data_vec)
dim(map_df)
head(map_df)
map_df$data <- data_vec
head(map_df)
ggplot(map_df, aes(x=long, y=lat,group=group,fill=data))+ geom_polygon() + scale_colour_gradient2(limits=c(5, 23), low="blue", high="red", guide="none")
ggplot(map_df, aes(x=long, y=lat,group=group,fill=data))+ geom_polygon() + scale_colour_gradient2(limits=c(0, 30), low="blue", high="red", guide="none")
ggplot(map_df, aes(x=long, y=lat,group=group,fill=data))+ geom_polygon() + scale_colour_gradient2(limits=c(0, 30), low="blue", high="red")
ggplot(map_df, aes(x=long, y=lat,group=group,fill=data))+ geom_polygon() + scale_colour_gradient2(limits=c(0, 30))
ggplot(map_df, aes(x=long, y=lat,group=group,fill=data))+ geom_polygon() + scale_colour_gradient2(limits=c(0, 30), guide="colorbar")
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
cm<-climate_map(world_map_df,world_dat,return_map = T) + scale_colour_gradient2(limits=c(5, 23),low = "blue", high = "red", guide="colourbar")
py <- plotly()  #create plotly object
r <- py$ggplotly(cm)
cm<-climate_map(world_map_df,world_dat,return_map = T) + scale_colour_gradient2(limits=c(5, 23))#,low = "blue", high = "red", guide="colourbar")
py <- plotly()  #create plotly object
#call the ggplotly() method to convert your ggplot2 plot into a Plotly plot:
r <- py$ggplotly(cm)
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
cm<-climate_map(world_map_df,world_dat,return_map = T) + scale_fill_gradient2(limits=c(5, 23))#,low = "blue", high = "red", guide="colourbar")
cm<-climate_map(world_map_df,world_dat,return_map = T) + scale_fill_gradient2(limits=c(5, 23))#,low = "blue", high = "red", guide="colourbar")
cm
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
?scale_fill_gradient2
head(world_map)
head(world_dat)
world <- c(NoAm_country, SoAm_country, Eur_country, Asia_country, Africa_country, Oceana_country)
world<-world[! world %in% c("UMI")]
world_dat <- get_ensemble_temp(world, "annualavg", start=st, end=en)
head(world_dat)
min(world_dat$data)
min[world_dat$data]
tmp<-world_dat$data
min(tmp)
import numpy
t<-c(0, 2, 3, 4)
min(t)
tmp
tmp<-as.list(tmp)
head(tmp)
world_dat
str(world_dat)
world_dat$data <- as.numeric(as.character(world_dat$data))
tmp<-world_dat$data
min(tmp)
max(tmp)
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
head(world_dat)
tail(world_dat)
tmp<-subset(world_dat, world_dat$scenario!="b1")
head(tmp)
tail(tmp)
tmp<-subset(world_dat, world_dat$scenario!="a2")
tail(tmp)
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
world <- c("USA", "MEX")
world_dat <- get_ensemble_temp(world, "annualavg", start=1920, end=1939)
head(world_dat)
world_dat
world_dat <- get_ensemble_temp(world, "annualavg", start=1920, end=1939)
world_dat
world_dat <- get_ensemble_temp(world, "annualavg", start=1920, end=2100)
world_dat
world_dat$data <- as.numeric(as.character(world_dat$data))
world_dat<-subset(world_dat,world_dat$percentile==50) #subset to median percentile
world_dat$years=paste(world_dat$fromYear,world_dat$toYear, sep="-")
world_dat<-subset(world_dat, select=-c(percentile, fromYear, toYear))
world_dat
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
scenario1()
dfyr1<-reactive({subset(world_dat, world_dat$scenario==scenario1())})
head(dfyr1)
head(world_dat)
reactive({scenario1()})
yr1()
input$scen1
scenario1
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
head(world_dat)
head(world_dat$scenario==scenario1())
head(world_dat$scenario==eval(scenario1()))
dfyr1<-reactive({subset(world_dat, world_dat$scenario==scenario1())})
head(dfyr1())
dfyr2<-reactive({subset(world_dat, world_dat$scenario==scenario2())})
df1<-reactive({subset(dfyr1(), dfyr1()$years==yr1())})
df2<-reactive({subset(dfyr2(), dfyr2()$years==yr2())})
output$add1 <- renderText({paste("Temperature prediction for years ", yr1(), " and ", scenario1(), " scenario") })
print(output$add1)
output$add1
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
getwd()
setwd("~/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/")
setwd("~/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_slidify/")
author("deck1")
library(slidify)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
install_github('slidify', 'ramnathv/slidify')
library(slidify)
author("deck1")
library(knitr)
shiny::runApp('~/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('~/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('~/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
head(world_dat)
input$scen1
dfyr1<-subset(world_dat, world_dat$scenario==input$scen1)
head(dfyr1)
yr1()
df1 <- subset(dfyr1, dfyr1$years==yr1())
head(df1)
shiny::runApp('~/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('~/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('~/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
shiny::runApp('~/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot')
getwd()
setwd("~/Dropbox/Courses/Coursera_Data_Science_2014/")
setwd("~/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot/")
getwd()
shiny::runApp()
```{r, fig.show='hold', results='hide'}
climate_map(world_map_df,world_dat,return_map = T) + scale_fill_gradient2(
)
shiny::runApp()
shiny::runApp()
setwd(/Users/nicolegoebel/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot")
setwd("/Users/nicolegoebel/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_oneplot")
shiny::runApp()
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install_github("ropensci/plotly")
shiny::runApp()
shiny::runApp()
