source('~/Dropbox/Courses/TIM209/2014/HW1/hw1ex2.R')
hw1ex2
hw1ex2()
hw1ex2()
xx<-hw1ex2()
source('~/Dropbox/Courses/TIM209/2014/HW1/hw1ex2.R')
xx<-hw1ex2(50)
xx
source('~/Dropbox/Courses/TIM209/2014/Week3_GradientDescent_TaylorSeries/homework/TIM209-2014-HWK-Week03-Goebel_HW3EX3p7.R')
source('~/Dropbox/Courses/TIM209/2014/Week3_GradientDescent_TaylorSeries/homework/HW3_redo_GradDescentEg_weights.R')
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
rm(list=ls())
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
main()
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
rm(list=ls())
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
main()
hist((read.csv(submissionFile)[3][,1]), breaks=400,
main=paste("Predicted Days in Hospital\n", submissionFile, "\n", date()))
submissionFile
MemberID=datasets$testY2$MemberID
MemberID
datasets
datasets$trainY2$MemberID
datasets
submissionDF = cbind(MemberID=datasets$trainY2$MemberID, ClaimsTruncated=datasets$trainY3$ClaimsTruncated, DaysInHospital)
tmp
tmp=datasets$trainY2$MemberID
size(tmp)
dim(tmp)
tmp
length(tmp)
tmp2=datasets$trainY3$ClaimsTruncated
length(tmp2)
length(DaysInHospital)
submissionDF = cbind(MemberID=datasets$trainY3$MemberID, ClaimsTruncated=datasets$trainY3$ClaimsTruncated, DaysInHospital)
submissionFile = paste(dataDirOut, submissionTag, ".csv", sep="")
submissionFile
submissionDF
write.csv(submissionDF, submissionFile, row.names=FALSE)
cat(date(), "finished writing training file for ",submissionFile, " \n")
#verify the submission file
head(read.csv(submissionFile))  #verify submission
tail(read.csv(submissionFile))  #verify submission
cat("submission row, column count is:",dim(read.csv(submissionFile)))  #verify submission
summary(read.csv(submissionFile))  #verify submission
#
#linear model
#LM_model  =  lm(DaysInHospital~., trainData[,-c(memberIndex)])
#saicBestModel= stepAIC(LM_model,direction="backward")
hist((read.csv(submissionFile)[3][,1]), breaks=400,
main=paste("Predicted Days in Hospital\n", submissionFile, "\n", date()))
grid()
#cat("hist(log(read.csv(\"", submissionFile, "\")[3][,1]+1), breaks=100, main=\"log(Predicted Days in Hospital)\")", sep="")
cat("hist((read.csv(\"", submissionFile, "\")[3][,1]), breaks=100, main=\"Predicted Days in Hospital\\\n",
submissionFile,"\\\n",
date(), "\", cex=0.5)", sep="")
return(submissionFile)
summary(read.csv(submissionFilename))  #verify submission
submissionFilename=runExperiment(submissionTag, generateDataFromScratch)
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
rm(list=ls)
rm(list=ls())
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
main()
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
rm(list=ls())
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
main()
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
rm(list=ls())
source('~/Dropbox/Courses/TIM209/2014/Week9_HeritageHealthPrize/HeritagePrize/R-CODE/newDriver.R')
main()
rm(ls=list())
rm(list()=ls)
rm(list=ls())
swirl()
install.package(swirl)
install.packages(swirl)
install.packages{swirl
install.packages{swirl}
install.packages("swirl")
library(swirl)
swirl()
cars
cars$mpgCity
myMPG<-cars$mpgCity
mean(myMPG)
median(myMPG)
table(myMPG)
19
range(cars$price)
61.9-7.4
var(cars$price)
sd(cars$price)
nxt()
15
18
10000
12000
15000
14000
9000
8000
next()
skip()
25
2
4
summary(cars$price)
x <- 100
cars$type
sqrt(y)
z<-sqrt(y)
?help
?sqrt
cars
7
range(cars$price)
sum(cars$price)
sum(cars$price)/length(cars$price)
mean(cars$price)
mpg.midsize
sort(mpg.midsize)
mpg.sorted<-sort(mpg.midsize)
19
median(mpg.midsize)
summary(cars$mpgCity)
25
19
18
sd(summary(mpg.midsize)
)
sd(mpg.midsize)
sd(mpg.midsize)^2
24
install.packages("pwr")
swirl()
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3,col='red')
summary(regrline)
fit<-lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic<-fit$coef[1]
ols.slope<-fit$coef[2]
lhs-rhs
all.equal(lhs,rhs)
varChild<-var(galton$child)
varRes<-var(fit$residuals)
varEst<-est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, sum(varRes+varEst))
all.equal(varChild, sum(varRes,varEst))
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor,gpa_nor)
cor(gpa_nor,gch_nor)
l_nor<-(gch_nor~gpa_nor)
l_nor<-lm(gch_nor~gpa_nor)
fit<-lm(child ~ parent, galton)
sqrt(fit$residuals/n-2)
sqrt(sum(fit$residuals)/n-2)
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu<-mean(galton$child)
sTot<-sum((galton$child-mu)^2)
sRes<-deviance(fit)^2
sRes <- deviance(fit)
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)^2
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
View(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1,
| trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
swirl()
next()
all<-lm(Fertility~.,swiss)
summary(all)
lm(Fertility~agriculture,swiss)
lm(Fertility~agriculture,swiss)
lm(Fertility~Agriculture,swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(Examination, Education)
cor(Examination, Education, data=swiss)
cor(Examination, Education, data=Swiss)
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
next()
ec<-swiss$Examination+swiss$Catholic
efit<-lm(Fertility~.+ec,swiss)
all$coef-efit$coef
all$coefficients-efit$coefficients
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays,15)
InsectSprays$A
sA
summary(InsectSprays[,2])
sapply(InsectSprays, classes)
?sapply
sapply(InsectSprays, class)
fit<-lm(count~., InsectSprays)
fit$coef
summary(fit)$coef
est<-summary(fit)$coef[,1]
mean(sA)
mean*sB
mean(sB)
nfit<-lm(count~.-1, InsectSprays)
summary(nfit)$coef
spray2<-relevel(InsectSprays$spray, C)
spray2<-relevel(InsectSprays$spray, "C")
fit2<-lm(count~.-1, spray2)
spray2
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
fit$coef[2]-fit$coef[3]/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
dim(hinger)
dim(hunger)
948
names(hunger)
fit<-lm(Numeric~Year, hunger)
summary(fit)$coef
lmF<-lm(Numeric[hunger$Sex=="Female"]~Year[hunger$Sex=="Female"], hunger)
lmM<-lm(Numeric[hunger$Sex=="Male"]~Year[hunger$Sex=="Male"], hunger)
lmBoth<-lm(Numeric~Year+Sex, hunger)
summary(lmBoth)
lmInter<-lm(Numeric~Year+Sex+ Sex*Year, hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which=1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
View(hatvalues(fit))
sigma<-srt(deviance(fit)/fit$dof)
sigma<-sqrt(deviance(fit)/fit$dof)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd<-resid(fit)/sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
Use plot(fit, which=3)
plot(fit, which=3)
plot(fit, which=2)
sigma1<-sqrt(deviance(fitno)/df.resid(fitno))
sigma1<-sqrt(deviance(fitno)/df.fitno(resid))
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
predict(fitno, out2)-predict(fit, out2)
dy <- predict(fitno, out2)-predict(fit, out2)
dy/2*sigma^2
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
rgp1()
rgp2()
head(swiss)
mdl<-lm(Fertility~., Swiss)
mdl<-lm(Fertility~., swiss)
vif(mdl)
mdl2<-lm(Fertility~.-Education, swiss)
mdl2<-lm(Fertility~.-Examin'ation, swiss)
''
mdl2<-lm(Fertility~.-Examination, swiss)
vif(mdl2)
x1c<-simbias()
apply(x1c, 1, mean)
fit1<-lm(Fertility~Agriculture, swiss)
fit3<-lm(Fertility~Agriculture+Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d<-deviance(fit3)/43
n<-(deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2,43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
View(ravenData)
mdl<-glm(ravenWinNum ~ ravenScore, binomial, ravenData)
lodds<-predict(mdl, data.frame(ravenScore=c(0, 3, 6))
)
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
nxt()
View(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date,poisson, hits)
summary(mdl)
exp(confint(mdl, 'date'))
which.max(hits[,'visits’])
)
()
)
P
)
)\
which.max(hits[,'visits’])
which.max(hits[,"visits"])
hits[704,]
lambda<-mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- glm(visits ~ date, offset=log(visits+1) ,poisson, hits)
mdl2 <- glm(simplystats ~ date, offset=log(visits+1) ,poisson, hits)
summary(mdl2)
qpois(.95,mdl2$fitted.values[704])
skip()
skip()
skip()
skip()
skip()
skip()
as.integer(head(hits[,'date'])
)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
library(rWBclimate)
countries <-c("USA","BRA","CAN","YEM")
st=1900
en=2100
data_df_all <- get_ensemble_temp(countries, type="annualavg", start=st, end=en)
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
runApp()
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
get_ensemble_temp(countries, type="annualavg", start=st, end=en)
get_ensemble_temp(countries, type="annualavg", start=st, end=en)
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
names(iris) = gsub("\\.", "", names(iris))
r1<-rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
r1
r1$save('r1b.html', cdn = F)
r1b.html
r1
r1$LIB$url
getwd()
r1$save('r1c.html', cdn = T)
r1c
r1
r1$save('r1c.html', cdn = F)
require(rCharts)
names(iris) = gsub("\\.", "", names(iris))
r1<-rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
r1$save('r1.html', cdn = F)
rr1$LIB$url
r1$LIB$url
r1
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/test')
shiny::runApp('Desktop/tempPredict_oneplot')
getwd()
setwd("Desktop/tempPredict_oneplot/")
setwd()
getwd
getwd()
wd=getwd()
wd
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
head(df1())
dfdiff<-df1()
head(dfdiff)
head(dfdiff,5)
dfdiff
df2()
dfdiff$data<-df1()$data-df2()$data
dfdiff
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
getwd()
scale_fill_gradient2(low="blue", mid="white", high = "red", space="rgb", guide="colourbar")
getwd()
https://github.com/nicolegoebel/WorldBank_RstudioShinyAppPitch.git
setwd("/Users/nicolegoebel/Dropbox/Courses/Coursera_Data_Science_2014/DevelopingDataProducts/tempPredict_slidify")
publish("nicolegoebel", "https://github.com/nicolegoebel/WorldBank_RstudioShinyAppPitch.git")
library(slidify)
publish("nicolegoebel", "https://github.com/nicolegoebel/WorldBank_RstudioShinyAppPitch.git")
publish("nicolegoebel", "WorldBank_RstudioShinyAppPitch")
library(slidify)
slidify("index.Rmd")
getwd()
setwd("deck1/")
slidify("index.Rmd")
publish("nicolegoebel", "WorldBank_RstudioShinyAppPitch")
publish("WorldBank_RstudioShinyAppPitch", "nicolegoebel")
publish(user="nicolegoebel", repo="WorldBank_RstudioShinyAppPitch")
?publish
publish(user="nicolegoebel", repo="WorldBank_RstudioShinyAppPitch", host="github")
publish_githum(repo="WorldBank_RstudioShinyAppPitch", username="nicolegoebel")
publish_github(repo="WorldBank_RstudioShinyAppPitch", username="nicolegoebel")
publish_github(repo="WorldBank_RstudioShinyAppPitch", username=getOption("github.user"))
publish_github(repo="WorldBank_RstudioShinyAppPitch", username="nicolegoebel", host="github")
publish(repo="WorldBank_RstudioShinyAppPitch", username="nicolegoebel", host="github")
publish(repo="WorldBank_RstudioShinyAppPitch", user="nicolegoebel", host="github")
slidify("index.Rmd")
slidify("index.Rmd")
